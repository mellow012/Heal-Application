{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mellow/Documents/Heal-Application-main/Heal-Application-main/src/hooks/userRole.ts"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useAuth } from '@/app/components/AuthProvide';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\n\n/**\n * Supported user roles in the system\n */\nexport type UserRole = \n  | 'super_admin' \n  | 'hospital_admin' \n  | 'doctor'\n  | 'nurse'\n  | 'receptionist'\n  | 'staff'\n  | 'patient'\n  | null;\n\n/**\n * User role data with permissions and metadata\n */\nexport interface UserRoleData {\n  role: UserRole;\n  hospitalId: string | null;\n  hospitalRole: string | null;\n  // Permission flags\n  canAccessMedicalData: boolean;\n  canEditMedicalData: boolean;\n  canManageHospital: boolean;\n  canManageStaff: boolean;\n  canViewReports: boolean;\n  // Role type flags\n  isPatient: boolean;\n  isMedicalPersonnel: boolean;\n  isHospitalAdmin: boolean;\n  isSuperAdmin: boolean;\n  isDoctor: boolean;\n  isNurse: boolean;\n  isReceptionist: boolean;\n}\n\n/**\n * Return type for useUserRole hook\n */\ninterface UseUserRoleReturn {\n  userRoleData: UserRoleData | null;\n  loading: boolean;\n  error: string | null;\n  refetch: () => Promise<void>;\n}\n\n/**\n * Custom hook to fetch and manage user role data\n */\nexport function useUserRole(): UseUserRoleReturn {\n  const { user, loading: authLoading } = useAuth();\n  const [userRoleData, setUserRoleData] = useState<UserRoleData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  /**\n   * Normalize role string to handle different formats\n   * Returns 'patient' as default for unknown/missing roles\n   */\n  const normalizeRole = (role: string | undefined | null): UserRole => {\n    if (!role) {\n      console.log('useUserRole: No role provided, defaulting to patient');\n      return 'patient'; // Default to patient if no role\n    }\n    \n    // Handle different role formats\n    const normalized = role.toLowerCase().replace('-', '_').trim();\n    \n    const validRoles: UserRole[] = [\n      'super_admin',\n      'hospital_admin',\n      'doctor',\n      'nurse',\n      'receptionist',\n      'staff',\n      'patient'\n    ];\n    \n    if (validRoles.includes(normalized as UserRole)) {\n      return normalized as UserRole;\n    }\n    \n    console.log('useUserRole: Invalid role provided, defaulting to patient:', role);\n    return 'patient'; // Default to patient if unknown role\n  };\n\n  /**\n   * Calculate permissions based on role\n   */\n  const calculatePermissions = (role: UserRole): Partial<UserRoleData> => {\n    const isSuperAdmin = role === 'super_admin';\n    const isHospitalAdmin = role === 'hospital_admin';\n    const isDoctor = role === 'doctor';\n    const isNurse = role === 'nurse';\n    const isReceptionist = role === 'receptionist';\n    const isStaff = role === 'staff';\n    const isPatient = role === 'patient';\n    const isMedicalPersonnel = isDoctor || isNurse || isReceptionist;\n\n    return {\n      // Permission flags\n      canAccessMedicalData: isPatient || isMedicalPersonnel || isHospitalAdmin || isSuperAdmin,\n      canEditMedicalData: isDoctor || isNurse || isHospitalAdmin || isSuperAdmin,\n      canManageHospital: isHospitalAdmin || isSuperAdmin,\n      canManageStaff: isHospitalAdmin || isSuperAdmin,\n      canViewReports: isMedicalPersonnel || isHospitalAdmin || isSuperAdmin,\n      // Role type flags\n      isPatient,\n      isMedicalPersonnel,\n      isHospitalAdmin,\n      isSuperAdmin,\n      isDoctor,\n      isNurse,\n      isReceptionist,\n    };\n  };\n\n  /**\n   * Assign default patient role to user in Firestore\n   */\n  const assignDefaultRole = async (userId: string): Promise<void> => {\n    try {\n      console.log('useUserRole: Assigning default patient role to user', userId);\n      \n      await setDoc(doc(db, 'users', userId), {\n        role: 'patient',\n        hospitalId: null,\n        hospitalRole: null,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      }, { merge: true }); // Use merge to preserve existing data\n      \n      console.log('useUserRole: Successfully assigned patient role');\n    } catch (err) {\n      console.error('useUserRole: Error assigning default role:', err);\n      throw err;\n    }\n  };\n\n  /**\n   * Fetch user role data from custom claims and Firestore\n   */\n  const fetchUserRole = async (): Promise<void> => {\n    try {\n      // Reset error state\n      setError(null);\n\n      // Wait for auth to finish loading\n      if (authLoading) {\n        console.log('useUserRole: Auth still loading');\n        return;\n      }\n\n      // No user logged in\n      if (!user) {\n        console.log('useUserRole: No user logged in');\n        setUserRoleData(null);\n        setLoading(false);\n        return;\n      }\n\n      console.log('useUserRole: Fetching role for user', user.uid);\n      console.log('useUserRole: Custom claims', user.customClaims);\n\n      // Try to get role from custom claims first (more reliable)\n      let role = user.customClaims?.role as string | undefined;\n      let hospitalId = user.customClaims?.hospitalId as string | undefined;\n      let hospitalRole = user.customClaims?.hospitalRole as string | undefined;\n\n      // Fallback to Firestore if custom claims not available\n      if (!role) {\n        console.log('useUserRole: No role in custom claims, checking Firestore');\n        \n        try {\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          \n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            console.log('useUserRole: Firestore data', userData);\n            \n            role = userData.role;\n            hospitalId = userData.hospitalId;\n            hospitalRole = userData.hospitalRole;\n            \n            // If still no role, assign default patient role\n            if (!role) {\n              console.log('useUserRole: No role in Firestore, assigning default patient role');\n              await assignDefaultRole(user.uid);\n              role = 'patient';\n            }\n          } else {\n            // Document doesn't exist, create it with patient role\n            console.log('useUserRole: User document does not exist, creating with patient role');\n            await assignDefaultRole(user.uid);\n            role = 'patient';\n          }\n        } catch (firestoreError) {\n          console.error('useUserRole: Error fetching Firestore document:', firestoreError);\n          \n          // Even if Firestore fails, assign patient role locally\n          console.log('useUserRole: Firestore error, defaulting to patient role');\n          role = 'patient';\n        }\n      }\n\n      // Normalize the role (will default to patient if invalid)\n      const normalizedRole = normalizeRole(role);\n      console.log('useUserRole: Normalized role', normalizedRole);\n\n      // Calculate permissions based on role\n      const permissions = calculatePermissions(normalizedRole);\n\n      // Create complete role data object\n      const roleData: UserRoleData = {\n        role: normalizedRole,\n        hospitalId: hospitalId || null,\n        hospitalRole: hospitalRole || null,\n        ...permissions,\n      } as UserRoleData;\n\n      console.log('useUserRole: Complete role data', roleData);\n      setUserRoleData(roleData);\n      setError(null);\n    } catch (error: any) {\n      console.error('useUserRole: Unexpected error:', error);\n      \n      // Even on error, provide a fallback patient role\n      console.log('useUserRole: Error occurred, providing fallback patient role');\n      const fallbackRoleData: UserRoleData = {\n        role: 'patient',\n        hospitalId: null,\n        hospitalRole: null,\n        ...calculatePermissions('patient'),\n      } as UserRoleData;\n      \n      setUserRoleData(fallbackRoleData);\n      setError('Failed to fetch complete user data, using default patient role');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch role when user or auth loading state changes\n  useEffect(() => {\n    fetchUserRole();\n  }, [user, authLoading]);\n\n  // Manual refetch function\n  const refetch = async () => {\n    setLoading(true);\n    await fetchUserRole();\n  };\n\n  return {\n    userRoleData,\n    loading: authLoading || loading,\n    error,\n    refetch,\n  };\n}\n\n/**\n * Utility function to check if user has a specific role\n */\nexport function hasRole(userRoleData: UserRoleData | null, role: UserRole): boolean {\n  return userRoleData?.role === role;\n}\n\n/**\n * Utility function to check if user has any of the specified roles\n */\nexport function hasAnyRole(userRoleData: UserRoleData | null, roles: UserRole[]): boolean {\n  return roles.some(role => userRoleData?.role === role);\n}\n\n/**\n * Utility function to check if user belongs to a specific hospital\n */\nexport function belongsToHospital(\n  userRoleData: UserRoleData | null, \n  hospitalId: string\n): boolean {\n  return userRoleData?.hospitalId === hospitalId;\n}\n\n/**\n * Utility function to check if user can perform an action\n */\nexport function canPerformAction(\n  userRoleData: UserRoleData | null,\n  action: 'accessMedical' | 'editMedical' | 'manageHospital' | 'manageStaff' | 'viewReports'\n): boolean {\n  if (!userRoleData) return false;\n\n  switch (action) {\n    case 'accessMedical':\n      return userRoleData.canAccessMedicalData;\n    case 'editMedical':\n      return userRoleData.canEditMedicalData;\n    case 'manageHospital':\n      return userRoleData.canManageHospital;\n    case 'manageStaff':\n      return userRoleData.canManageStaff;\n    case 'viewReports':\n      return userRoleData.canViewReports;\n    default:\n      return false;\n  }\n}\n\n/**\n * Utility function to get user role display name\n */\nexport function getRoleDisplayName(role: UserRole): string {\n  const roleNames: Record<NonNullable<UserRole>, string> = {\n    super_admin: 'Super Administrator',\n    hospital_admin: 'Hospital Administrator',\n    doctor: 'Doctor',\n    nurse: 'Nurse',\n    receptionist: 'Receptionist',\n    staff: 'Staff Member',\n    patient: 'Patient',\n  };\n\n  return role ? roleNames[role] : 'Unknown';\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mellow/Documents/Heal-Application-main/Heal-Application-main/src/app/hospital/setup/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useAuth } from '@/app/components/AuthProvide';\r\nimport { useUserRole } from '@/hooks/userRole';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\n\r\n// Skeleton Loader Component\r\nconst Skeleton = ({ width = '100%', height = '40px', className = '' }) => (\r\n  <div\r\n    className={`bg-gray-200 animate-pulse rounded ${className}`}\r\n    style={{ width, height }}\r\n  ></div>\r\n);\r\n\r\ninterface HospitalData {\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  address: string;\r\n  city: string;\r\n  country: string;\r\n  postalCode: string;\r\n  website?: string;\r\n  description?: string;\r\n  departments: string[];\r\n}\r\n\r\ntype Step = 1 | 2 | 3;\r\n\r\nexport default function HospitalSetupPage() {\r\n  const { user, loading: authLoading } = useAuth();\r\n  const { userRoleData, loading: roleLoading } = useUserRole();\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n\r\n  const [currentStep, setCurrentStep] = useState<Step>(1);\r\n  const [isVerifying, setIsVerifying] = useState(true);\r\n  const [hospitalId, setHospitalId] = useState('');\r\n  const [formData, setFormData] = useState<HospitalData>({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    city: '',\r\n    country: 'Malawi',\r\n    postalCode: '',\r\n    website: '',\r\n    description: '',\r\n    departments: [],\r\n  });\r\n  const [newDepartment, setNewDepartment] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Common departments\r\n  const commonDepartments = [\r\n    'Emergency',\r\n    'Surgery',\r\n    'Pediatrics',\r\n    'Obstetrics & Gynecology',\r\n    'Internal Medicine',\r\n    'Orthopedics',\r\n    'Cardiology',\r\n    'Radiology',\r\n    'Laboratory',\r\n    'Pharmacy',\r\n    'Outpatient',\r\n  ];\r\n\r\n  // Step configuration\r\n  const steps = [\r\n    { number: 1, title: 'Basic Information', description: 'Hospital details' },\r\n    { number: 2, title: 'Location & Contact', description: 'Address and contact info' },\r\n    { number: 3, title: 'Departments', description: 'Set up departments' },\r\n  ];\r\n\r\n  // Verify user is hospital admin and fetch hospital data\r\n  useEffect(() => {\r\n    const verifyAndFetchHospital = async () => {\r\n      if (authLoading || roleLoading) {\r\n        console.log('HospitalSetup: Waiting for auth/role');\r\n        return;\r\n      }\r\n\r\n      if (!user) {\r\n        console.log('HospitalSetup: No user, redirecting to login');\r\n        router.push('/login');\r\n        return;\r\n      }\r\n\r\n      if (!userRoleData?.isHospitalAdmin) {\r\n        console.log('HospitalSetup: Not hospital admin, redirecting');\r\n        router.push('/dashboard');\r\n        return;\r\n      }\r\n\r\n      const hospitalIdParam = searchParams.get('hospitalId') || userRoleData.hospitalId;\r\n      \r\n      if (!hospitalIdParam) {\r\n        setError('Hospital ID not found');\r\n        setIsVerifying(false);\r\n        return;\r\n      }\r\n\r\n      setHospitalId(hospitalIdParam);\r\n\r\n      try {\r\n        const token = await user.getIdToken();\r\n\r\n        // Verify user is admin of this hospital\r\n        const verifyResponse = await fetch('/api/hospital/verify-admin', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ hospitalId: hospitalIdParam }),\r\n        });\r\n\r\n        if (!verifyResponse.ok) {\r\n          const errorData = await verifyResponse.json();\r\n          setError(errorData.error || 'You are not authorized to set up this hospital');\r\n          setIsVerifying(false);\r\n          return;\r\n        }\r\n\r\n        // Fetch existing hospital data\r\n        const hospitalResponse = await fetch(`/api/hospital/${hospitalIdParam}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (hospitalResponse.ok) {\r\n          const hospitalData = await hospitalResponse.json();\r\n          console.log('HospitalSetup: Fetched hospital data', hospitalData);\r\n          \r\n          setFormData({\r\n            name: hospitalData.name || '',\r\n            email: hospitalData.email || '',\r\n            phone: hospitalData.phone || '',\r\n            address: hospitalData.address || '',\r\n            city: hospitalData.city || '',\r\n            country: hospitalData.country || 'Malawi',\r\n            postalCode: hospitalData.postalCode || '',\r\n            website: hospitalData.website || '',\r\n            description: hospitalData.description || '',\r\n            departments: hospitalData.departments || [],\r\n          });\r\n        }\r\n\r\n        setIsVerifying(false);\r\n      } catch (err: any) {\r\n        console.error('HospitalSetup: Error verifying admin', err);\r\n        setError(err.message || 'Failed to verify hospital admin');\r\n        setIsVerifying(false);\r\n      }\r\n    };\r\n\r\n    verifyAndFetchHospital();\r\n  }, [user, userRoleData, authLoading, roleLoading, router, searchParams]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    setError(''); // Clear error when user types\r\n  };\r\n\r\n  const addDepartment = (dept: string) => {\r\n    if (dept.trim() && !formData.departments.includes(dept.trim())) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        departments: [...prev.departments, dept.trim()],\r\n      }));\r\n      setNewDepartment('');\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const removeDepartment = (dept: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      departments: prev.departments.filter(d => d !== dept),\r\n    }));\r\n  };\r\n\r\n  const validateStep = (step: Step): boolean => {\r\n    setError('');\r\n    \r\n    switch (step) {\r\n      case 1:\r\n        if (!formData.name.trim()) {\r\n          setError('Hospital name is required');\r\n          return false;\r\n        }\r\n        if (!formData.phone.trim()) {\r\n          setError('Phone number is required');\r\n          return false;\r\n        }\r\n        return true;\r\n      \r\n      case 2:\r\n        if (!formData.address.trim()) {\r\n          setError('Street address is required');\r\n          return false;\r\n        }\r\n        if (!formData.city.trim()) {\r\n          setError('City is required');\r\n          return false;\r\n        }\r\n        if (!formData.country.trim()) {\r\n          setError('Country is required');\r\n          return false;\r\n        }\r\n        return true;\r\n      \r\n      case 3:\r\n        if (formData.departments.length === 0) {\r\n          setError('Please add at least one department');\r\n          return false;\r\n        }\r\n        return true;\r\n      \r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (validateStep(currentStep)) {\r\n      setCurrentStep((prev) => Math.min(prev + 1, 3) as Step);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentStep((prev) => Math.max(prev - 1, 1) as Step);\r\n    setError('');\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!validateStep(3)) return;\r\n\r\n    setIsSubmitting(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const token = await user!.getIdToken();\r\n\r\n      const response = await fetch(`/api/hospital/${hospitalId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          setupCompleted: true,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok && result.success) {\r\n        setSuccess('Hospital setup completed successfully! Redirecting...');\r\n        \r\n        setTimeout(() => {\r\n          router.push('/hospital-admin');\r\n        }, 2000);\r\n      } else {\r\n        setError(result.error || 'Failed to complete hospital setup');\r\n      }\r\n    } catch (err: any) {\r\n      console.error('HospitalSetup: Error saving data', err);\r\n      setError(err.message || 'Failed to save hospital information');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (authLoading || roleLoading || isVerifying) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n        <div className=\"w-full max-w-3xl bg-white rounded-lg shadow-lg p-6\">\r\n          <Skeleton width=\"300px\" height=\"32px\" className=\"mb-6 mx-auto\" />\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {[...Array(6)].map((_, i) => (\r\n              <Skeleton key={i} height=\"48px\" className=\"rounded-md\" />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && !hospitalId) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\r\n        <div className=\"w-full max-w-md bg-white rounded-lg shadow-lg p-6\">\r\n          <div className=\"text-center\">\r\n            <div className=\"mb-4 text-red-500\">\r\n              <svg className=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n            </div>\r\n            <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">Access Denied</h1>\r\n            <p className=\"text-red-600 mb-6\">{error}</p>\r\n            <button\r\n              onClick={() => router.push('/dashboard')}\r\n              className=\"px-6 py-3 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\r\n            >\r\n              Go to Dashboard\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8 px-4\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">\r\n            Hospital Setup\r\n          </h1>\r\n          <p className=\"text-gray-600\">\r\n            Complete your hospital profile to get started\r\n          </p>\r\n        </div>\r\n\r\n        {/* Progress Steps */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center justify-between\">\r\n            {steps.map((step, index) => (\r\n              <div key={step.number} className=\"flex items-center flex-1\">\r\n                <div className=\"flex flex-col items-center flex-1\">\r\n                  <div\r\n                    className={`w-12 h-12 rounded-full flex items-center justify-center font-bold transition-all duration-300 ${\r\n                      currentStep >= step.number\r\n                        ? 'bg-blue-600 text-white shadow-lg scale-110'\r\n                        : 'bg-gray-300 text-gray-600'\r\n                    }`}\r\n                  >\r\n                    {currentStep > step.number ? (\r\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M5 13l4 4L19 7\" />\r\n                      </svg>\r\n                    ) : (\r\n                      step.number\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mt-2 text-center\">\r\n                    <p className={`text-sm font-medium ${currentStep >= step.number ? 'text-blue-600' : 'text-gray-500'}`}>\r\n                      {step.title}\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-500 hidden sm:block\">{step.description}</p>\r\n                  </div>\r\n                </div>\r\n                {index < steps.length - 1 && (\r\n                  <div\r\n                    className={`h-1 flex-1 mx-4 mt-[-40px] transition-all duration-300 ${\r\n                      currentStep > step.number ? 'bg-blue-600' : 'bg-gray-300'\r\n                    }`}\r\n                  />\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Form Card */}\r\n        <div className=\"bg-white rounded-lg shadow-xl p-6 md:p-8 relative\">\r\n          {isSubmitting && (\r\n            <div className=\"absolute inset-0 bg-white bg-opacity-95 flex items-center justify-center rounded-lg z-50\">\r\n              <div className=\"flex flex-col items-center gap-3\">\r\n                <div className=\"animate-spin rounded-full h-16 w-16 border-b-4 border-blue-600\"></div>\r\n                <p className=\"text-lg font-medium text-gray-700\">Saving your information...</p>\r\n                <p className=\"text-sm text-gray-500\">Please wait</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Step 1: Basic Information */}\r\n          {currentStep === 1 && (\r\n            <div className=\"space-y-6 animate-fade-in\">\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Basic Information</h2>\r\n                <p className=\"text-gray-600 mb-6\">Let's start with your hospital's basic details</p>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Hospital Name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"e.g., Queen Elizabeth Central Hospital\"\r\n                  className=\"w-full p-4 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Hospital Email <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full p-4 border-2 border-gray-200 rounded-lg bg-gray-50 text-gray-600\"\r\n                  disabled\r\n                />\r\n                <p className=\"text-xs text-gray-500 mt-1\">This email cannot be changed</p>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Phone Number <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"phone\"\r\n                  name=\"phone\"\r\n                  type=\"tel\"\r\n                  value={formData.phone}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"+265 123 456 789\"\r\n                  className=\"w-full p-4 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"website\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Website <span className=\"text-gray-400\">(Optional)</span>\r\n                </label>\r\n                <input\r\n                  id=\"website\"\r\n                  name=\"website\"\r\n                  type=\"url\"\r\n                  value={formData.website}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"https://www.yourhospital.com\"\r\n                  className=\"w-full p-4 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  About Your Hospital <span className=\"text-gray-400\">(Optional)</span>\r\n                </label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Tell us about your hospital, services offered, and mission...\"\r\n                  rows={4}\r\n                  className=\"w-full p-4 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Step 2: Location & Contact */}\r\n          {currentStep === 2 && (\r\n            <div className=\"space-y-6 animate-fade-in\">\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Location & Contact</h2>\r\n                <p className=\"text-gray-600 mb-6\">Where is your hospital located?</p>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Street Address <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"address\"\r\n                  name=\"address\"\r\n                  type=\"text\"\r\n                  value={formData.address}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"e.g., 123 Glyn Jones Road\"\r\n                  className=\"w-full p-4 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div>\r\n                  <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    City <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    id=\"city\"\r\n                    name=\"city\"\r\n                    type=\"text\"\r\n                    value={formData.city}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"e.g., Blantyre\"\r\n                    className=\"w-full p-4 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Country <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    id=\"country\"\r\n                    name=\"country\"\r\n                    type=\"text\"\r\n                    value={formData.country}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"e.g., Malawi\"\r\n                    className=\"w-full p-4 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"postalCode\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Postal Code <span className=\"text-gray-400\">(Optional)</span>\r\n                </label>\r\n                <input\r\n                  id=\"postalCode\"\r\n                  name=\"postalCode\"\r\n                  type=\"text\"\r\n                  value={formData.postalCode}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"e.g., P.O. Box 123\"\r\n                  className=\"w-full p-4 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\r\n                <div className=\"flex items-start gap-3\">\r\n                  <svg className=\"w-6 h-6 text-blue-600 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-blue-900\">Why we need this</p>\r\n                    <p className=\"text-sm text-blue-700 mt-1\">\r\n                      This information helps patients find your hospital and allows emergency services to locate you quickly.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Step 3: Departments */}\r\n          {currentStep === 3 && (\r\n            <div className=\"space-y-6 animate-fade-in\">\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Departments</h2>\r\n                <p className=\"text-gray-600 mb-6\">Add the departments available at your hospital</p>\r\n              </div>\r\n\r\n              {/* Quick Add Common Departments */}\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-700 mb-3\">Quick Add Popular Departments:</p>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {commonDepartments.map((dept) => (\r\n                    <button\r\n                      key={dept}\r\n                      type=\"button\"\r\n                      onClick={() => addDepartment(dept)}\r\n                      disabled={formData.departments.includes(dept)}\r\n                      className={`px-4 py-2 text-sm font-medium rounded-full border-2 transition-all duration-200 ${\r\n                        formData.departments.includes(dept)\r\n                          ? 'bg-blue-100 border-blue-500 text-blue-700 cursor-not-allowed'\r\n                          : 'bg-white border-gray-300 text-gray-700 hover:bg-blue-50 hover:border-blue-400 hover:scale-105'\r\n                      }`}\r\n                    >\r\n                      {formData.departments.includes(dept) ? (\r\n                        <span className=\"flex items-center gap-1\">\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                          </svg>\r\n                          {dept}\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"flex items-center gap-1\">\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n                          </svg>\r\n                          {dept}\r\n                        </span>\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Custom Department Input */}\r\n              <div>\r\n                <label htmlFor=\"newDepartment\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Add Custom Department\r\n                </label>\r\n                <div className=\"flex gap-3\">\r\n                  <input\r\n                    id=\"newDepartment\"\r\n                    type=\"text\"\r\n                    value={newDepartment}\r\n                    onChange={(e) => setNewDepartment(e.target.value)}\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        e.preventDefault();\r\n                        addDepartment(newDepartment);\r\n                      }\r\n                    }}\r\n                    placeholder=\"Enter department name\"\r\n                    className=\"flex-1 p-4 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => addDepartment(newDepartment)}\r\n                    disabled={!newDepartment.trim()}\r\n                    className=\"px-6 py-4 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\"\r\n                  >\r\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n                    </svg>\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Selected Departments */}\r\n              {formData.departments.length > 0 ? (\r\n                <div className=\"p-6 bg-gradient-to-br from-blue-50 to-indigo-50 rounded-lg border-2 border-blue-200\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <p className=\"text-sm font-semibold text-gray-700\">\r\n                      Selected Departments ({formData.departments.length})\r\n                    </p>\r\n                    <span className=\"text-xs text-gray-500\">Click ✕ to remove</span>\r\n                  </div>\r\n                  <div className=\"flex flex-wrap gap-3\">\r\n                    {formData.departments.map((dept) => (\r\n                      <div\r\n                        key={dept}\r\n                        className=\"group flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-full text-sm font-medium shadow-md hover:shadow-lg transition-all duration-200\"\r\n                      >\r\n                        <span>{dept}</span>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeDepartment(dept)}\r\n                          className=\"hover:bg-blue-700 rounded-full p-1 transition-colors\"\r\n                        >\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"p-8 bg-yellow-50 border-2 border-yellow-200 rounded-lg text-center\">\r\n                  <svg className=\"w-12 h-12 text-yellow-600 mx-auto mb-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\r\n                  </svg>\r\n                  <p className=\"text-sm font-medium text-yellow-800\">\r\n                    No departments added yet\r\n                  </p>\r\n                  <p className=\"text-sm text-yellow-700 mt-1\">\r\n                    Please add at least one department to continue\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"mt-6 p-4 bg-red-50 border-2 border-red-200 rounded-lg animate-shake\">\r\n              <div className=\"flex items-start gap-3\">\r\n                <svg className=\"w-6 h-6 text-red-600 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n                <p className=\"text-sm font-medium text-red-800\">{error}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Success Message */}\r\n          {success && (\r\n            <div className=\"mt-6 p-4 bg-green-50 border-2 border-green-200 rounded-lg\">\r\n              <div className=\"flex items-start gap-3\">\r\n                <svg className=\"w-6 h-6 text-green-600 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n                <p className=\"text-sm font-medium text-green-800\">{success}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Navigation Buttons */}\r\n          <div className=\"flex gap-4 mt-8 pt-6 border-t-2 border-gray-200\">\r\n            {currentStep > 1 && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handlePrevious}\r\n                disabled={isSubmitting}\r\n                className=\"px-6 py-3 border-2 border-gray-300 text-gray-700 font-medium rounded-lg hover:bg-gray-50 transition disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                </svg>\r\n                Previous\r\n              </button>\r\n            )}\r\n            \r\n            {currentStep < 3 ? (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleNext}\r\n                className=\"flex-1 px-6 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white font-medium rounded-lg hover:from-blue-700 hover:to-blue-800 transition shadow-lg hover:shadow-xl flex items-center justify-center gap-2\"\r\n              >\r\n                Next Step\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                </svg>\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleSubmit}\r\n                disabled={isSubmitting || formData.departments.length === 0}\r\n                className=\"flex-1 px-6 py-3 bg-gradient-to-r from-green-600 to-green-700 text-white font-medium rounded-lg hover:from-green-700 hover:to-green-800 transition shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\r\n              >\r\n                {isSubmitting ? (\r\n                  <>\r\n                    <svg className=\"animate-spin h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                    </svg>\r\n                    Completing Setup...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                    Complete Setup\r\n                  </>\r\n                )}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Help Card */}\r\n        <div className=\"mt-6 p-4 bg-white rounded-lg shadow-md\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <svg className=\"w-6 h-6 text-blue-600 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-900\">Need Help?</p>\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                You can always come back and edit this information later from your dashboard settings.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        @keyframes fade-in {\r\n          from {\r\n            opacity: 0;\r\n            transform: translateY(10px);\r\n          }\r\n          to {\r\n            opacity: 1;\r\n            transform: translateY(0);\r\n          }\r\n        }\r\n\r\n        @keyframes shake {\r\n          0%, 100% { transform: translateX(0); }\r\n          25% { transform: translateX(-5px); }\r\n          75% { transform: translateX(5px); }\r\n        }\r\n\r\n        .animate-fade-in {\r\n          animation: fade-in 0.3s ease-out;\r\n        }\r\n\r\n        .animate-shake {\r\n          animation: shake 0.3s ease-in-out;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}