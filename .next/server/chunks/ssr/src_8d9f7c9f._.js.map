{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mellow/Documents/Heal-Application-main/Heal-Application-main/src/hooks/userRole.ts"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useAuth } from '@/app/components/AuthProvide';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\n\n/**\n * Supported user roles in the system\n */\nexport type UserRole = \n  | 'super_admin' \n  | 'hospital_admin' \n  | 'doctor'\n  | 'nurse'\n  | 'receptionist'\n  | 'staff'\n  | 'patient'\n  | null;\n\n/**\n * User role data with permissions and metadata\n */\nexport interface UserRoleData {\n  role: UserRole;\n  hospitalId: string | null;\n  hospitalRole: string | null;\n  // Permission flags\n  canAccessMedicalData: boolean;\n  canEditMedicalData: boolean;\n  canManageHospital: boolean;\n  canManageStaff: boolean;\n  canViewReports: boolean;\n  // Role type flags\n  isPatient: boolean;\n  isMedicalPersonnel: boolean;\n  isHospitalAdmin: boolean;\n  isSuperAdmin: boolean;\n  isDoctor: boolean;\n  isNurse: boolean;\n  isReceptionist: boolean;\n}\n\n/**\n * Return type for useUserRole hook\n */\ninterface UseUserRoleReturn {\n  userRoleData: UserRoleData | null;\n  loading: boolean;\n  error: string | null;\n  refetch: () => Promise<void>;\n}\n\n/**\n * Custom hook to fetch and manage user role data\n */\nexport function useUserRole(): UseUserRoleReturn {\n  const { user, loading: authLoading } = useAuth();\n  const [userRoleData, setUserRoleData] = useState<UserRoleData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  /**\n   * Normalize role string to handle different formats\n   * Returns 'patient' as default for unknown/missing roles\n   */\n  const normalizeRole = (role: string | undefined | null): UserRole => {\n    if (!role) {\n      console.log('useUserRole: No role provided, defaulting to patient');\n      return 'patient'; // Default to patient if no role\n    }\n    \n    // Handle different role formats\n    const normalized = role.toLowerCase().replace('-', '_').trim();\n    \n    const validRoles: UserRole[] = [\n      'super_admin',\n      'hospital_admin',\n      'doctor',\n      'nurse',\n      'receptionist',\n      'staff',\n      'patient'\n    ];\n    \n    if (validRoles.includes(normalized as UserRole)) {\n      return normalized as UserRole;\n    }\n    \n    console.log('useUserRole: Invalid role provided, defaulting to patient:', role);\n    return 'patient'; // Default to patient if unknown role\n  };\n\n  /**\n   * Calculate permissions based on role\n   */\n  const calculatePermissions = (role: UserRole): Partial<UserRoleData> => {\n    const isSuperAdmin = role === 'super_admin';\n    const isHospitalAdmin = role === 'hospital_admin';\n    const isDoctor = role === 'doctor';\n    const isNurse = role === 'nurse';\n    const isReceptionist = role === 'receptionist';\n    const isStaff = role === 'staff';\n    const isPatient = role === 'patient';\n    const isMedicalPersonnel = isDoctor || isNurse || isReceptionist;\n\n    return {\n      // Permission flags\n      canAccessMedicalData: isPatient || isMedicalPersonnel || isHospitalAdmin || isSuperAdmin,\n      canEditMedicalData: isDoctor || isNurse || isHospitalAdmin || isSuperAdmin,\n      canManageHospital: isHospitalAdmin || isSuperAdmin,\n      canManageStaff: isHospitalAdmin || isSuperAdmin,\n      canViewReports: isMedicalPersonnel || isHospitalAdmin || isSuperAdmin,\n      // Role type flags\n      isPatient,\n      isMedicalPersonnel,\n      isHospitalAdmin,\n      isSuperAdmin,\n      isDoctor,\n      isNurse,\n      isReceptionist,\n    };\n  };\n\n  /**\n   * Assign default patient role to user in Firestore\n   */\n  const assignDefaultRole = async (userId: string): Promise<void> => {\n    try {\n      console.log('useUserRole: Assigning default patient role to user', userId);\n      \n      await setDoc(doc(db, 'users', userId), {\n        role: 'patient',\n        hospitalId: null,\n        hospitalRole: null,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      }, { merge: true }); // Use merge to preserve existing data\n      \n      console.log('useUserRole: Successfully assigned patient role');\n    } catch (err) {\n      console.error('useUserRole: Error assigning default role:', err);\n      throw err;\n    }\n  };\n\n  /**\n   * Fetch user role data from custom claims and Firestore\n   */\n  const fetchUserRole = async (): Promise<void> => {\n    try {\n      // Reset error state\n      setError(null);\n\n      // Wait for auth to finish loading\n      if (authLoading) {\n        console.log('useUserRole: Auth still loading');\n        return;\n      }\n\n      // No user logged in\n      if (!user) {\n        console.log('useUserRole: No user logged in');\n        setUserRoleData(null);\n        setLoading(false);\n        return;\n      }\n\n      console.log('useUserRole: Fetching role for user', user.uid);\n      console.log('useUserRole: Custom claims', user.customClaims);\n\n      // Try to get role from custom claims first (more reliable)\n      let role = user.customClaims?.role as string | undefined;\n      let hospitalId = user.customClaims?.hospitalId as string | undefined;\n      let hospitalRole = user.customClaims?.hospitalRole as string | undefined;\n\n      // Fallback to Firestore if custom claims not available\n      if (!role) {\n        console.log('useUserRole: No role in custom claims, checking Firestore');\n        \n        try {\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          \n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            console.log('useUserRole: Firestore data', userData);\n            \n            role = userData.role;\n            hospitalId = userData.hospitalId;\n            hospitalRole = userData.hospitalRole;\n            \n            // If still no role, assign default patient role\n            if (!role) {\n              console.log('useUserRole: No role in Firestore, assigning default patient role');\n              await assignDefaultRole(user.uid);\n              role = 'patient';\n            }\n          } else {\n            // Document doesn't exist, create it with patient role\n            console.log('useUserRole: User document does not exist, creating with patient role');\n            await assignDefaultRole(user.uid);\n            role = 'patient';\n          }\n        } catch (firestoreError) {\n          console.error('useUserRole: Error fetching Firestore document:', firestoreError);\n          \n          // Even if Firestore fails, assign patient role locally\n          console.log('useUserRole: Firestore error, defaulting to patient role');\n          role = 'patient';\n        }\n      }\n\n      // Normalize the role (will default to patient if invalid)\n      const normalizedRole = normalizeRole(role);\n      console.log('useUserRole: Normalized role', normalizedRole);\n\n      // Calculate permissions based on role\n      const permissions = calculatePermissions(normalizedRole);\n\n      // Create complete role data object\n      const roleData: UserRoleData = {\n        role: normalizedRole,\n        hospitalId: hospitalId || null,\n        hospitalRole: hospitalRole || null,\n        ...permissions,\n      } as UserRoleData;\n\n      console.log('useUserRole: Complete role data', roleData);\n      setUserRoleData(roleData);\n      setError(null);\n    } catch (error: any) {\n      console.error('useUserRole: Unexpected error:', error);\n      \n      // Even on error, provide a fallback patient role\n      console.log('useUserRole: Error occurred, providing fallback patient role');\n      const fallbackRoleData: UserRoleData = {\n        role: 'patient',\n        hospitalId: null,\n        hospitalRole: null,\n        ...calculatePermissions('patient'),\n      } as UserRoleData;\n      \n      setUserRoleData(fallbackRoleData);\n      setError('Failed to fetch complete user data, using default patient role');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch role when user or auth loading state changes\n  useEffect(() => {\n    fetchUserRole();\n  }, [user, authLoading]);\n\n  // Manual refetch function\n  const refetch = async () => {\n    setLoading(true);\n    await fetchUserRole();\n  };\n\n  return {\n    userRoleData,\n    loading: authLoading || loading,\n    error,\n    refetch,\n  };\n}\n\n/**\n * Utility function to check if user has a specific role\n */\nexport function hasRole(userRoleData: UserRoleData | null, role: UserRole): boolean {\n  return userRoleData?.role === role;\n}\n\n/**\n * Utility function to check if user has any of the specified roles\n */\nexport function hasAnyRole(userRoleData: UserRoleData | null, roles: UserRole[]): boolean {\n  return roles.some(role => userRoleData?.role === role);\n}\n\n/**\n * Utility function to check if user belongs to a specific hospital\n */\nexport function belongsToHospital(\n  userRoleData: UserRoleData | null, \n  hospitalId: string\n): boolean {\n  return userRoleData?.hospitalId === hospitalId;\n}\n\n/**\n * Utility function to check if user can perform an action\n */\nexport function canPerformAction(\n  userRoleData: UserRoleData | null,\n  action: 'accessMedical' | 'editMedical' | 'manageHospital' | 'manageStaff' | 'viewReports'\n): boolean {\n  if (!userRoleData) return false;\n\n  switch (action) {\n    case 'accessMedical':\n      return userRoleData.canAccessMedicalData;\n    case 'editMedical':\n      return userRoleData.canEditMedicalData;\n    case 'manageHospital':\n      return userRoleData.canManageHospital;\n    case 'manageStaff':\n      return userRoleData.canManageStaff;\n    case 'viewReports':\n      return userRoleData.canViewReports;\n    default:\n      return false;\n  }\n}\n\n/**\n * Utility function to get user role display name\n */\nexport function getRoleDisplayName(role: UserRole): string {\n  const roleNames: Record<NonNullable<UserRole>, string> = {\n    super_admin: 'Super Administrator',\n    hospital_admin: 'Hospital Administrator',\n    doctor: 'Doctor',\n    nurse: 'Nurse',\n    receptionist: 'Receptionist',\n    staff: 'Staff Member',\n    patient: 'Patient',\n  };\n\n  return role ? roleNames[role] : 'Unknown';\n}"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AACA;AAAA;AACA;AALA;;;;;AAwDO,SAAS;IACd,MAAM,EAAE,IAAI,EAAE,SAAS,WAAW,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IACtE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD;;;GAGC,GACD,MAAM,gBAAgB,CAAC;QACrB,IAAI,CAAC,MAAM;YACT,QAAQ,GAAG,CAAC;YACZ,OAAO,WAAW,gCAAgC;QACpD;QAEA,gCAAgC;QAChC,MAAM,aAAa,KAAK,WAAW,GAAG,OAAO,CAAC,KAAK,KAAK,IAAI;QAE5D,MAAM,aAAyB;YAC7B;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QAED,IAAI,WAAW,QAAQ,CAAC,aAAyB;YAC/C,OAAO;QACT;QAEA,QAAQ,GAAG,CAAC,8DAA8D;QAC1E,OAAO,WAAW,qCAAqC;IACzD;IAEA;;GAEC,GACD,MAAM,uBAAuB,CAAC;QAC5B,MAAM,eAAe,SAAS;QAC9B,MAAM,kBAAkB,SAAS;QACjC,MAAM,WAAW,SAAS;QAC1B,MAAM,UAAU,SAAS;QACzB,MAAM,iBAAiB,SAAS;QAChC,MAAM,UAAU,SAAS;QACzB,MAAM,YAAY,SAAS;QAC3B,MAAM,qBAAqB,YAAY,WAAW;QAElD,OAAO;YACL,mBAAmB;YACnB,sBAAsB,aAAa,sBAAsB,mBAAmB;YAC5E,oBAAoB,YAAY,WAAW,mBAAmB;YAC9D,mBAAmB,mBAAmB;YACtC,gBAAgB,mBAAmB;YACnC,gBAAgB,sBAAsB,mBAAmB;YACzD,kBAAkB;YAClB;YACA;YACA;YACA;YACA;YACA;YACA;QACF;IACF;IAEA;;GAEC,GACD,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,QAAQ,GAAG,CAAC,uDAAuD;YAEnE,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,SAAS,SAAS;gBACrC,MAAM;gBACN,YAAY;gBACZ,cAAc;gBACd,WAAW,IAAI,OAAO,WAAW;gBACjC,WAAW,IAAI,OAAO,WAAW;YACnC,GAAG;gBAAE,OAAO;YAAK,IAAI,sCAAsC;YAE3D,QAAQ,GAAG,CAAC;QACd,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,8CAA8C;YAC5D,MAAM;QACR;IACF;IAEA;;GAEC,GACD,MAAM,gBAAgB;QACpB,IAAI;YACF,oBAAoB;YACpB,SAAS;YAET,kCAAkC;YAClC,IAAI,aAAa;gBACf,QAAQ,GAAG,CAAC;gBACZ;YACF;YAEA,oBAAoB;YACpB,IAAI,CAAC,MAAM;gBACT,QAAQ,GAAG,CAAC;gBACZ,gBAAgB;gBAChB,WAAW;gBACX;YACF;YAEA,QAAQ,GAAG,CAAC,uCAAuC,KAAK,GAAG;YAC3D,QAAQ,GAAG,CAAC,8BAA8B,KAAK,YAAY;YAE3D,2DAA2D;YAC3D,IAAI,OAAO,KAAK,YAAY,EAAE;YAC9B,IAAI,aAAa,KAAK,YAAY,EAAE;YACpC,IAAI,eAAe,KAAK,YAAY,EAAE;YAEtC,uDAAuD;YACvD,IAAI,CAAC,MAAM;gBACT,QAAQ,GAAG,CAAC;gBAEZ,IAAI;oBACF,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,SAAS,KAAK,GAAG;oBAEtD,IAAI,QAAQ,MAAM,IAAI;wBACpB,MAAM,WAAW,QAAQ,IAAI;wBAC7B,QAAQ,GAAG,CAAC,+BAA+B;wBAE3C,OAAO,SAAS,IAAI;wBACpB,aAAa,SAAS,UAAU;wBAChC,eAAe,SAAS,YAAY;wBAEpC,gDAAgD;wBAChD,IAAI,CAAC,MAAM;4BACT,QAAQ,GAAG,CAAC;4BACZ,MAAM,kBAAkB,KAAK,GAAG;4BAChC,OAAO;wBACT;oBACF,OAAO;wBACL,sDAAsD;wBACtD,QAAQ,GAAG,CAAC;wBACZ,MAAM,kBAAkB,KAAK,GAAG;wBAChC,OAAO;oBACT;gBACF,EAAE,OAAO,gBAAgB;oBACvB,QAAQ,KAAK,CAAC,mDAAmD;oBAEjE,uDAAuD;oBACvD,QAAQ,GAAG,CAAC;oBACZ,OAAO;gBACT;YACF;YAEA,0DAA0D;YAC1D,MAAM,iBAAiB,cAAc;YACrC,QAAQ,GAAG,CAAC,gCAAgC;YAE5C,sCAAsC;YACtC,MAAM,cAAc,qBAAqB;YAEzC,mCAAmC;YACnC,MAAM,WAAyB;gBAC7B,MAAM;gBACN,YAAY,cAAc;gBAC1B,cAAc,gBAAgB;gBAC9B,GAAG,WAAW;YAChB;YAEA,QAAQ,GAAG,CAAC,mCAAmC;YAC/C,gBAAgB;YAChB,SAAS;QACX,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,kCAAkC;YAEhD,iDAAiD;YACjD,QAAQ,GAAG,CAAC;YACZ,MAAM,mBAAiC;gBACrC,MAAM;gBACN,YAAY;gBACZ,cAAc;gBACd,GAAG,qBAAqB,UAAU;YACpC;YAEA,gBAAgB;YAChB,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,qDAAqD;IACrD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;QAAM;KAAY;IAEtB,0BAA0B;IAC1B,MAAM,UAAU;QACd,WAAW;QACX,MAAM;IACR;IAEA,OAAO;QACL;QACA,SAAS,eAAe;QACxB;QACA;IACF;AACF;AAKO,SAAS,QAAQ,YAAiC,EAAE,IAAc;IACvE,OAAO,cAAc,SAAS;AAChC;AAKO,SAAS,WAAW,YAAiC,EAAE,KAAiB;IAC7E,OAAO,MAAM,IAAI,CAAC,CAAA,OAAQ,cAAc,SAAS;AACnD;AAKO,SAAS,kBACd,YAAiC,EACjC,UAAkB;IAElB,OAAO,cAAc,eAAe;AACtC;AAKO,SAAS,iBACd,YAAiC,EACjC,MAA0F;IAE1F,IAAI,CAAC,cAAc,OAAO;IAE1B,OAAQ;QACN,KAAK;YACH,OAAO,aAAa,oBAAoB;QAC1C,KAAK;YACH,OAAO,aAAa,kBAAkB;QACxC,KAAK;YACH,OAAO,aAAa,iBAAiB;QACvC,KAAK;YACH,OAAO,aAAa,cAAc;QACpC,KAAK;YACH,OAAO,aAAa,cAAc;QACpC;YACE,OAAO;IACX;AACF;AAKO,SAAS,mBAAmB,IAAc;IAC/C,MAAM,YAAmD;QACvD,aAAa;QACb,gBAAgB;QAChB,QAAQ;QACR,OAAO;QACP,cAAc;QACd,OAAO;QACP,SAAS;IACX;IAEA,OAAO,OAAO,SAAS,CAAC,KAAK,GAAG;AAClC","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mellow/Documents/Heal-Application-main/Heal-Application-main/src/app/hospital/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '@/app/components/AuthProvide';\nimport { useUserRole } from '@/hooks/userRole';\nimport { useRouter } from 'next/navigation';\n\n// Skeleton Loader Component\nconst Skeleton = ({ width = '100%', height = '40px', className = '' }) => (\n  <div\n    className={`bg-gray-200 animate-pulse rounded ${className}`}\n    style={{ width, height }}\n  ></div>\n);\n\ntype TabType = 'overview' | 'staff' | 'settings';\n\ninterface HospitalData {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  address: string;\n  city: string;\n  country: string;\n  departments: string[];\n  status: string;\n  setupCompleted: boolean;\n}\n\ninterface StaffMember {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  role: string;\n  department: string;\n  status: string;\n  addedAt: string;\n}\n\nexport default function HospitalAdminDashboard() {\n  const { user, loading: authLoading, logout } = useAuth();\n  const { userRoleData, loading: roleLoading } = useUserRole();\n  const router = useRouter();\n  const [activeTab, setActiveTab] = useState<TabType>('overview');\n  const [hospitalData, setHospitalData] = useState<HospitalData | null>(null);\n  const [staffMembers, setStaffMembers] = useState<StaffMember[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Add Staff Modal State\n  const [showAddStaffModal, setShowAddStaffModal] = useState(false);\n  const [staffForm, setStaffForm] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'nurse' as 'doctor' | 'nurse' | 'receptionist' | 'staff',\n    department: '',\n  });\n  const [staffFormError, setStaffFormError] = useState('');\n  const [staffFormSuccess, setStaffFormSuccess] = useState('');\n  const [isSubmittingStaff, setIsSubmittingStaff] = useState(false);\n\n  // Fetch hospital data\n  useEffect(() => {\n    const fetchHospitalData = async () => {\n      if (authLoading || roleLoading) return;\n\n      if (!user) {\n        router.push('/login');\n        return;\n      }\n\n      if (!userRoleData?.isHospitalAdmin) {\n        router.push('/dashboard');\n        return;\n      }\n\n      const hospitalId = userRoleData.hospitalId;\n      if (!hospitalId) {\n        setError('Hospital ID not found');\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        const token = await user.getIdToken();\n        \n        // Fetch hospital data\n        const response = await fetch(`/api/hospital/${hospitalId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch hospital data');\n        }\n\n        const data = await response.json();\n        setHospitalData(data);\n\n        // Check if setup is completed\n        if (!data.setupCompleted) {\n          router.push(`/hospital/setup?hospitalId=${hospitalId}`);\n          return;\n        }\n\n        // Fetch staff members\n        await fetchStaffMembers(hospitalId, token);\n\n        setIsLoading(false);\n      } catch (err: any) {\n        console.error('Error fetching hospital data:', err);\n        setError(err.message || 'Failed to load hospital data');\n        setIsLoading(false);\n      }\n    };\n\n    fetchHospitalData();\n  }, [user, userRoleData, authLoading, roleLoading, router]);\n\n  const fetchStaffMembers = async (hospitalId: string, token: string) => {\n    try {\n      const response = await fetch(`/api/hospital/${hospitalId}/staff`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setStaffMembers(data.staff || []);\n      }\n    } catch (err) {\n      console.error('Error fetching staff:', err);\n    }\n  };\n\n  const handleAddStaff = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setStaffFormError('');\n    setStaffFormSuccess('');\n\n    if (!staffForm.name || !staffForm.email || !staffForm.phone || !staffForm.department) {\n      setStaffFormError('All fields are required');\n      return;\n    }\n\n    setIsSubmittingStaff(true);\n\n    try {\n      const token = await user!.getIdToken();\n      \n      const response = await fetch('/api/hospital/staff', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          ...staffForm,\n          hospitalId: hospitalData!.id,\n        }),\n      });\n\n      const result = await response.json();\n\n      if (response.ok && result.success) {\n        setStaffFormSuccess(result.message);\n        setStaffForm({\n          name: '',\n          email: '',\n          phone: '',\n          role: 'nurse',\n          department: '',\n        });\n        \n        // Refresh staff list\n        await fetchStaffMembers(hospitalData!.id, token);\n        \n        // Close modal after 2 seconds\n        setTimeout(() => {\n          setShowAddStaffModal(false);\n          setStaffFormSuccess('');\n        }, 2000);\n      } else {\n        setStaffFormError(result.error || 'Failed to add staff member');\n      }\n    } catch (err: any) {\n      setStaffFormError(err.message || 'Failed to add staff member');\n    } finally {\n      setIsSubmittingStaff(false);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login');\n    } catch (err) {\n      console.error('Logout error:', err);\n    }\n  };\n\n  if (authLoading || roleLoading || isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-100\">\n        <div className=\"bg-white shadow\">\n          <div className=\"max-w-7xl mx-auto px-4 py-4\">\n            <Skeleton width=\"200px\" height=\"32px\" />\n          </div>\n        </div>\n        <div className=\"max-w-7xl mx-auto px-4 py-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n            {[1, 2, 3].map((i) => (\n              <Skeleton key={i} height=\"120px\" className=\"rounded-lg\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error && !hospitalData) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6 max-w-md\">\n          <div className=\"text-center\">\n            <div className=\"mb-4 text-red-500\">\n              <svg className=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">Error</h1>\n            <p className=\"text-red-600 mb-6\">{error}</p>\n            <button\n              onClick={() => router.push('/login')}\n              className=\"px-6 py-3 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\"\n            >\n              Go to Login\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Header */}\n      <div className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-4\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">{hospitalData?.name}</h1>\n              <p className=\"text-sm text-gray-600\">{hospitalData?.city}, {hospitalData?.country}</p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"text-right\">\n                <p className=\"text-sm font-medium text-gray-900\">{user?.email}</p>\n                <p className=\"text-xs text-gray-500\">Hospital Administrator</p>\n              </div>\n              <button\n                onClick={handleLogout}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-100 rounded-md transition\"\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <nav className=\"flex space-x-8\">\n            <button\n              onClick={() => setActiveTab('overview')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition ${\n                activeTab === 'overview'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              Overview\n            </button>\n            <button\n              onClick={() => setActiveTab('staff')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition ${\n                activeTab === 'staff'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              Staff Management\n            </button>\n            <button\n              onClick={() => setActiveTab('settings')}\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition ${\n                activeTab === 'settings'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              Settings\n            </button>\n          </nav>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Overview Tab */}\n        {activeTab === 'overview' && (\n          <div>\n            {/* Stats Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n              <div className=\"bg-white rounded-lg shadow p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">Total Staff</p>\n                    <p className=\"text-3xl font-bold text-gray-900 mt-2\">{staffMembers.length}</p>\n                  </div>\n                  <div className=\"bg-blue-100 rounded-full p-3\">\n                    <svg className=\"w-8 h-8 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">Departments</p>\n                    <p className=\"text-3xl font-bold text-gray-900 mt-2\">{hospitalData?.departments.length || 0}</p>\n                  </div>\n                  <div className=\"bg-green-100 rounded-full p-3\">\n                    <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">Status</p>\n                    <p className=\"text-lg font-bold text-green-600 mt-2 capitalize\">{hospitalData?.status || 'Active'}</p>\n                  </div>\n                  <div className=\"bg-purple-100 rounded-full p-3\">\n                    <svg className=\"w-8 h-8 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Hospital Information */}\n            <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Hospital Information</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <p className=\"text-sm text-gray-600 mb-1\">Email</p>\n                  <p className=\"text-base font-medium text-gray-900\">{hospitalData?.email}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600 mb-1\">Phone</p>\n                  <p className=\"text-base font-medium text-gray-900\">{hospitalData?.phone}</p>\n                </div>\n                <div className=\"md:col-span-2\">\n                  <p className=\"text-sm text-gray-600 mb-1\">Address</p>\n                  <p className=\"text-base font-medium text-gray-900\">\n                    {hospitalData?.address}, {hospitalData?.city}, {hospitalData?.country}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Departments */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Departments</h2>\n              <div className=\"flex flex-wrap gap-2\">\n                {hospitalData?.departments.map((dept) => (\n                  <span\n                    key={dept}\n                    className=\"px-3 py-1 bg-blue-100 text-blue-700 text-sm font-medium rounded-full\"\n                  >\n                    {dept}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Staff Management Tab */}\n        {activeTab === 'staff' && (\n          <div>\n            <div className=\"bg-white rounded-lg shadow\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <div className=\"flex justify-between items-center\">\n                  <h2 className=\"text-lg font-semibold text-gray-900\">Staff Members ({staffMembers.length})</h2>\n                  <button\n                    onClick={() => setShowAddStaffModal(true)}\n                    className=\"px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 transition flex items-center gap-2\"\n                  >\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                    </svg>\n                    Add Staff Member\n                  </button>\n                </div>\n              </div>\n              \n              {staffMembers.length === 0 ? (\n                <div className=\"p-6\">\n                  <div className=\"text-center py-12\">\n                    <svg className=\"w-16 h-16 mx-auto text-gray-400 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n                    </svg>\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No staff members yet</h3>\n                    <p className=\"text-gray-600 mb-4\">Get started by adding your first staff member</p>\n                    <button\n                      onClick={() => setShowAddStaffModal(true)}\n                      className=\"px-6 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 transition\"\n                    >\n                      Add First Staff Member\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Role</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Department</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {staffMembers.map((staff) => (\n                        <tr key={staff.id} className=\"hover:bg-gray-50\">\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm font-medium text-gray-900\">{staff.name}</div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-500\">{staff.email}</div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800 capitalize\">\n                              {staff.role}\n                            </span>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {staff.department}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full capitalize ${\n                              staff.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n                            }`}>\n                              {staff.status}\n                            </span>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                            <button className=\"text-blue-600 hover:text-blue-900 mr-3\">Edit</button>\n                            <button className=\"text-red-600 hover:text-red-900\">Remove</button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Settings Tab */}\n        {activeTab === 'settings' && (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Hospital Settings</h2>\n              <button\n                onClick={() => router.push(`/hospital/setup?hospitalId=${hospitalData?.id}`)}\n                className=\"px-4 py-2 bg-gray-100 text-gray-700 text-sm font-medium rounded-md hover:bg-gray-200 transition\"\n              >\n                Edit Hospital Information\n              </button>\n            </div>\n\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Account Settings</h2>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email Notifications\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                      defaultChecked\n                    />\n                    <span className=\"ml-2 text-sm text-gray-700\">Receive email notifications for new staff</span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add Staff Modal */}\n      {showAddStaffModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Add Staff Member</h3>\n                <button\n                  onClick={() => {\n                    setShowAddStaffModal(false);\n                    setStaffFormError('');\n                    setStaffFormSuccess('');\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n\n              <form onSubmit={handleAddStaff} className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"staffName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Full Name <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    id=\"staffName\"\n                    type=\"text\"\n                    value={staffForm.name}\n                    onChange={(e) => setStaffForm({ ...staffForm, name: e.target.value })}\n                    placeholder=\"John Doe\"\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                    disabled={isSubmittingStaff}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"staffEmail\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    id=\"staffEmail\"\n                    type=\"email\"\n                    value={staffForm.email}\n                    onChange={(e) => setStaffForm({ ...staffForm, email: e.target.value })}\n                    placeholder=\"john@hospital.com\"\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                    disabled={isSubmittingStaff}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"staffPhone\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Phone Number <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    id=\"staffPhone\"\n                    type=\"tel\"\n                    value={staffForm.phone}\n                    onChange={(e) => setStaffForm({ ...staffForm, phone: e.target.value })}\n                    placeholder=\"+265123456789\"\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                    disabled={isSubmittingStaff}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"staffRole\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Role <span className=\"text-red-500\">*</span>\n                  </label>\n                  <select\n                    id=\"staffRole\"\n                    value={staffForm.role}\n                    onChange={(e) => setStaffForm({ ...staffForm, role: e.target.value as any })}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                    disabled={isSubmittingStaff}\n                  >\n                    <option value=\"doctor\">Doctor</option>\n                    <option value=\"nurse\">Nurse</option>\n                    <option value=\"receptionist\">Receptionist</option>\n                    <option value=\"staff\">Other Staff</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label htmlFor=\"staffDepartment\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Department <span className=\"text-red-500\">*</span>\n                  </label>\n                  <select\n                    id=\"staffDepartment\"\n                    value={staffForm.department}\n                    onChange={(e) => setStaffForm({ ...staffForm, department: e.target.value })}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                    disabled={isSubmittingStaff}\n                  >\n                    <option value=\"\">Select Department</option>\n                    {hospitalData?.departments.map((dept) => (\n                      <option key={dept} value={dept}>{dept}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {staffFormError && (\n                  <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n                    <p className=\"text-red-600 text-sm\">{staffFormError}</p>\n                  </div>\n                )}\n\n                {staffFormSuccess && (\n                  <div className=\"p-3 bg-green-50 border border-green-200 rounded-md\">\n                    <p className=\"text-green-600 text-sm\">{staffFormSuccess}</p>\n                  </div>\n                )}\n\n                <div className=\"flex gap-3 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowAddStaffModal(false);\n                      setStaffFormError('');\n                      setStaffFormSuccess('');\n                    }}\n                    disabled={isSubmittingStaff}\n                    className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition disabled:opacity-50\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={isSubmittingStaff}\n                    className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isSubmittingStaff ? 'Adding...' : 'Add Staff'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}