{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mellow/Documents/Heal-Application-main/Heal-Application-main/src/app/patients/page.tsx"],"sourcesContent":["'use client';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\ninterface Patient {\r\n  id: string;\r\n  patientId: string;\r\n  nationalId: string;\r\n  fullName: string;\r\n  dateOfBirth: string;\r\n  gender: string;\r\n  phone: string;\r\n  email?: string;\r\n  status: string;\r\n  registeredAt: string;\r\n  lastVisitDate?: string;\r\n  totalVisits: number;\r\n  city: string;\r\n}\r\n\r\ninterface PatientManagementProps {\r\n  user: any;\r\n  hospitalId: string;\r\n  userRole: string; // Add user role for permissions\r\n}\r\n\r\nexport default function PatientManagement({ user, hospitalId, userRole }: PatientManagementProps) {\r\n  const [patients, setPatients] = useState<Patient[]>([]);\r\n  const [filteredPatients, setFilteredPatients] = useState<Patient[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('all');\r\n  \r\n  // Modals\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showSearchModal, setShowSearchModal] = useState(false);\r\n  const [showRecordVisitModal, setShowRecordVisitModal] = useState(false);\r\n  \r\n  // States\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  \r\n  // Search results\r\n  const [searchResults, setSearchResults] = useState<Patient[]>([]);\r\n  const [searchPhone, setSearchPhone] = useState('');\r\n  const [selectedPatient, setSelectedPatient] = useState<Patient | null>(null);\r\n\r\n  // Patient Form State\r\n  const [patientForm, setPatientForm] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    dateOfBirth: '',\r\n    gender: 'male' as 'male' | 'female' | 'other',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    city: '',\r\n    country: 'Malawi',\r\n    emergencyContactName: '',\r\n    emergencyContactPhone: '',\r\n    emergencyContactRelation: '',\r\n    bloodGroup: '',\r\n    registeredAtHospitalId: hospitalId,\r\n  });\r\n\r\n  // Visit Form State\r\n  const [visitForm, setVisitForm] = useState({\r\n    visitType: 'consultation' as 'consultation' | 'emergency' | 'followup' | 'checkup' | 'surgery' | 'other',\r\n    chiefComplaint: '',\r\n    notes: '',\r\n  });\r\n\r\n  // Check if user can register patients\r\n  const canRegisterPatients = ['receptionist', 'hospital_admin', 'super_admin'].includes(userRole);\r\n\r\n  // Fetch patients\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const token = await user.getIdToken();\r\n      const response = await fetch(`/api/hospital/${hospitalId}/patients`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPatients(data.patients || []);\r\n        setFilteredPatients(data.patients || []);\r\n      }\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.error('Error fetching patients:', err);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && hospitalId) {\r\n      fetchPatients();\r\n    }\r\n  }, [user, hospitalId]);\r\n\r\n  // Filter patients\r\n  useEffect(() => {\r\n    let filtered = patients;\r\n\r\n    if (searchQuery) {\r\n      filtered = filtered.filter(p =>\r\n        p.fullName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        p.patientId.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        p.phone.includes(searchQuery)\r\n      );\r\n    }\r\n\r\n    if (statusFilter !== 'all') {\r\n      filtered = filtered.filter(p => p.status === statusFilter);\r\n    }\r\n\r\n    setFilteredPatients(filtered);\r\n  }, [searchQuery, statusFilter, patients]);\r\n\r\n  // Search existing patients\r\n  const handleSearchPatients = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!searchPhone.trim()) return;\r\n\r\n    setIsSearching(true);\r\n    setSearchResults([]);\r\n    setError('');\r\n\r\n    try {\r\n      const token = await user.getIdToken();\r\n      const response = await fetch(`/api/patients/search?phone=${searchPhone.trim()}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok && result.success) {\r\n        setSearchResults(result.patients || []);\r\n        if (result.patients.length === 0) {\r\n          setError('No patient found with this phone number. You can register a new patient.');\r\n        }\r\n      } else {\r\n        setError(result.error || 'Search failed');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to search patients');\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  // Record visit for existing patient\r\n  const handleRecordVisit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedPatient) return;\r\n\r\n    setIsSubmitting(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const token = await user.getIdToken();\r\n      const response = await fetch('/api/visits', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          patientId: selectedPatient.id,\r\n          hospitalId,\r\n          ...visitForm,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok && result.success) {\r\n        setSuccess('Visit recorded successfully!');\r\n        await fetchPatients(); // Refresh list\r\n        \r\n        setTimeout(() => {\r\n          setShowRecordVisitModal(false);\r\n          setSelectedPatient(null);\r\n          setSuccess('');\r\n          setVisitForm({\r\n            visitType: 'consultation',\r\n            chiefComplaint: '',\r\n            notes: '',\r\n          });\r\n        }, 2000);\r\n      } else {\r\n        setError(result.error || 'Failed to record visit');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to record visit');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Add new patient\r\n  const handleAddPatient = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const token = await user.getIdToken();\r\n      const response = await fetch('/api/patients', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(patientForm),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok && result.success) {\r\n        setSuccess(result.message);\r\n        setPatientForm({\r\n          firstName: '',\r\n          lastName: '',\r\n          dateOfBirth: '',\r\n          gender: 'male',\r\n          email: '',\r\n          phone: '',\r\n          address: '',\r\n          city: '',\r\n          country: 'Malawi',\r\n          emergencyContactName: '',\r\n          emergencyContactPhone: '',\r\n          emergencyContactRelation: '',\r\n          bloodGroup: '',\r\n          registeredAtHospitalId: hospitalId,\r\n        });\r\n        \r\n        await fetchPatients();\r\n        \r\n        setTimeout(() => {\r\n          setShowAddModal(false);\r\n          setSuccess('');\r\n        }, 2000);\r\n      } else {\r\n        setError(result.error || 'Failed to add patient');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to add patient');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const calculateAge = (dob: string) => {\r\n    const birthDate = new Date(dob);\r\n    const today = new Date();\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center py-12\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Header */}\r\n      <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Patients</h2>\r\n            <p className=\"text-sm text-gray-600 mt-1\">Manage patient records and visits</p>\r\n          </div>\r\n          <div className=\"flex gap-3\">\r\n            <button\r\n              onClick={() => setShowSearchModal(true)}\r\n              className=\"px-6 py-3 bg-green-600 text-white font-medium rounded-lg hover:bg-green-700 transition flex items-center justify-center gap-2\"\r\n            >\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n              </svg>\r\n              Search Patient\r\n            </button>\r\n            {canRegisterPatients && (\r\n              <button\r\n                onClick={() => setShowAddModal(true)}\r\n                className=\"px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition flex items-center justify-center gap-2\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                </svg>\r\n                Register Patient\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {!canRegisterPatients && (\r\n          <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\r\n            <p className=\"text-sm text-blue-800\">\r\n              <strong>Note:</strong> Only receptionists and administrators can register new patients. You can search for existing patients and record visits.\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Search and Filter */}\r\n        <div className=\"mt-6 flex flex-col md:flex-row gap-4\">\r\n          <div className=\"flex-1\">\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                placeholder=\"Search by name, ID, or phone...\"\r\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n              <svg className=\"w-5 h-5 text-gray-400 absolute left-3 top-2.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          <select\r\n            value={statusFilter}\r\n            onChange={(e) => setStatusFilter(e.target.value)}\r\n            className=\"px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"all\">All Status</option>\r\n            <option value=\"active\">Active</option>\r\n            <option value=\"inactive\">Inactive</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Patients List */}\r\n      {filteredPatients.length === 0 ? (\r\n        <div className=\"bg-white rounded-lg shadow p-12 text-center\">\r\n          <svg className=\"w-16 h-16 mx-auto text-gray-400 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n          </svg>\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n            {searchQuery || statusFilter !== 'all' ? 'No patients found' : 'No patients yet'}\r\n          </h3>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            {searchQuery || statusFilter !== 'all' \r\n              ? 'Try adjusting your search or filter' \r\n              : 'Search for existing patients or register new ones'}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Patient</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Age/Gender</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Contact</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Visits</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredPatients.map((patient) => (\r\n                <tr key={patient.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"flex-shrink-0 h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                        <span className=\"text-blue-600 font-semibold\">\r\n                          {patient.fullName.split(' ').map(n => n[0]).join('').substring(0, 2)}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"ml-4\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">{patient.fullName}</div>\r\n                        <div className=\"text-sm text-gray-500\">{patient.city}</div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm font-mono text-gray-900\">{patient.patientId}</div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">{calculateAge(patient.dateOfBirth)} years</div>\r\n                    <div className=\"text-sm text-gray-500 capitalize\">{patient.gender}</div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">{patient.phone}</div>\r\n                    {patient.email && <div className=\"text-sm text-gray-500\">{patient.email}</div>}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">{patient.totalVisits || 0}</div>\r\n                    {patient.lastVisitDate && (\r\n                      <div className=\"text-sm text-gray-500\">Last: {new Date(patient.lastVisitDate).toLocaleDateString()}</div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                      patient.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\r\n                    }`}>\r\n                      {patient.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                    <button className=\"text-blue-600 hover:text-blue-900 mr-4\">View</button>\r\n                    <button \r\n                      onClick={() => {\r\n                        setSelectedPatient(patient);\r\n                        setShowRecordVisitModal(true);\r\n                      }}\r\n                      className=\"text-green-600 hover:text-green-900\"\r\n                    >\r\n                      Record Visit\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Search Patient Modal */}\r\n      {showSearchModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full\">\r\n            <div className=\"p-6 border-b border-gray-200\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <h3 className=\"text-2xl font-bold text-gray-900\">Search for Existing Patient</h3>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowSearchModal(false);\r\n                    setSearchResults([]);\r\n                    setSearchPhone('');\r\n                    setError('');\r\n                  }}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <form onSubmit={handleSearchPatients} className=\"p-6\">\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Patient Phone Number\r\n                </label>\r\n                <div className=\"flex gap-3\">\r\n                  <input\r\n                    type=\"tel\"\r\n                    value={searchPhone}\r\n                    onChange={(e) => setSearchPhone(e.target.value)}\r\n                    placeholder=\"+265 123 456 789\"\r\n                    className=\"flex-1 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={isSearching}\r\n                    className=\"px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition disabled:opacity-50\"\r\n                  >\r\n                    {isSearching ? 'Searching...' : 'Search'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {error && (\r\n                <div className=\"mb-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                  <p className=\"text-yellow-800 text-sm\">{error}</p>\r\n                </div>\r\n              )}\r\n\r\n              {searchResults.length > 0 && (\r\n                <div className=\"space-y-3\">\r\n                  <h4 className=\"font-semibold text-gray-900\">Found {searchResults.length} patient(s):</h4>\r\n                  {searchResults.map((patient) => (\r\n                    <div key={patient.id} className=\"p-4 border border-gray-200 rounded-lg hover:bg-gray-50\">\r\n                      <div className=\"flex justify-between items-start\">\r\n                        <div>\r\n                          <p className=\"font-medium text-gray-900\">{patient.fullName}</p>\r\n                          <p className=\"text-sm text-gray-600\">ID: {patient.patientId}</p>\r\n                          <p className=\"text-sm text-gray-600\">Phone: {patient.phone}</p>\r\n                          <p className=\"text-sm text-gray-600\">Age: {calculateAge(patient.dateOfBirth)} • {patient.gender}</p>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => {\r\n                            setSelectedPatient(patient);\r\n                            setShowSearchModal(false);\r\n                            setShowRecordVisitModal(true);\r\n                          }}\r\n                          className=\"px-4 py-2 bg-green-600 text-white text-sm font-medium rounded-lg hover:bg-green-700 transition\"\r\n                        >\r\n                          Record Visit\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Record Visit Modal */}\r\n      {showRecordVisitModal && selectedPatient && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full\">\r\n            <div className=\"p-6 border-b border-gray-200\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <div>\r\n                  <h3 className=\"text-2xl font-bold text-gray-900\">Record Visit</h3>\r\n                  <p className=\"text-sm text-gray-600 mt-1\">Patient: {selectedPatient.fullName} ({selectedPatient.patientId})</p>\r\n                </div>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowRecordVisitModal(false);\r\n                    setSelectedPatient(null);\r\n                    setError('');\r\n                    setSuccess('');\r\n                  }}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <form onSubmit={handleRecordVisit} className=\"p-6\">\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Visit Type <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <select\r\n                    value={visitForm.visitType}\r\n                    onChange={(e) => setVisitForm({ ...visitForm, visitType: e.target.value as any })}\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    required\r\n                  >\r\n                    <option value=\"consultation\">Consultation</option>\r\n                    <option value=\"emergency\">Emergency</option>\r\n                    <option value=\"followup\">Follow-up</option>\r\n                    <option value=\"checkup\">Check-up</option>\r\n                    <option value=\"surgery\">Surgery</option>\r\n                    <option value=\"other\">Other</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Chief Complaint\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={visitForm.chiefComplaint}\r\n                    onChange={(e) => setVisitForm({ ...visitForm, chiefComplaint: e.target.value })}\r\n                    placeholder=\"e.g., Fever, headache\"\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Notes\r\n                  </label>\r\n                  <textarea\r\n                    value={visitForm.notes}\r\n                    onChange={(e) => setVisitForm({ ...visitForm, notes: e.target.value })}\r\n                    placeholder=\"Additional notes...\"\r\n                    rows={3}\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {error && (\r\n                <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n                  <p className=\"text-red-600 text-sm\">{error}</p>\r\n                </div>\r\n              )}\r\n\r\n              {success && (\r\n                <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n                  <p className=\"text-green-600 text-sm\">{success}</p>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex gap-3 mt-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setShowRecordVisitModal(false);\r\n                    setSelectedPatient(null);\r\n                  }}\r\n                  disabled={isSubmitting}\r\n                  className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition disabled:opacity-50\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"flex-1 px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition disabled:opacity-50 font-medium\"\r\n                >\r\n                  {isSubmitting ? 'Recording...' : 'Record Visit'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add Patient Modal - Same as before but only shown if canRegisterPatients */}\r\n      {showAddModal && canRegisterPatients && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50 overflow-y-auto\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full my-8\">\r\n            {/* ... (Keep existing Add Patient modal code) ... */}\r\n            <div className=\"p-6\">\r\n              <p className=\"text-gray-600\">Add Patient Form (Use previous artifact code)</p>\r\n              <button\r\n                onClick={() => setShowAddModal(false)}\r\n                className=\"mt-4 px-4 py-2 bg-gray-500 text-white rounded\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}