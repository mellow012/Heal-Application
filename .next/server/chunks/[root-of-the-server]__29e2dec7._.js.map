{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mellow/Documents/Heal-Application-main/Heal-Application-main/src/lib/firebaseAdmin.ts"],"sourcesContent":["/**\n * Firebase Admin SDK Configuration\n * \n * This file initializes Firebase Admin SDK for server-side operations.\n * It handles authentication, Firestore database access, and provides\n * utility functions for common operations.\n * \n * @module firebaseAdmin\n */\n\nimport admin from 'firebase-admin';\nimport { getAuth } from 'firebase-admin/auth';\nimport { getFirestore } from 'firebase-admin/firestore';\n\n/**\n * Helper function to properly format the private key\n * Handles various key formats from environment variables\n */\nfunction formatPrivateKey(key: string | undefined): string {\n  if (!key) {\n    throw new Error('FIREBASE_PRIVATE_KEY environment variable is not set');\n  }\n  \n  // Handle different key formats\n  return key\n    .replace(/\\\\n/g, '\\n')  // Replace literal \\n with actual newlines\n    .replace(/\"/g, '')      // Remove any quotes\n    .trim();                // Remove extra whitespace\n}\n\n/**\n * Validate all required Firebase Admin environment variables\n */\nfunction validateEnvironmentVariables(): void {\n  const requiredVars = {\n    FIREBASE_PROJECT_ID: process.env.FIREBASE_PROJECT_ID,\n    FIREBASE_CLIENT_EMAIL: process.env.FIREBASE_CLIENT_EMAIL,\n    FIREBASE_PRIVATE_KEY: process.env.FIREBASE_PRIVATE_KEY,\n  };\n\n  const missingVars = Object.entries(requiredVars)\n    .filter(([_, value]) => !value)\n    .map(([key]) => key);\n\n  if (missingVars.length > 0) {\n    throw new Error(\n      `Missing required environment variables: ${missingVars.join(', ')}\\n` +\n      'Please check your .env.local file.'\n    );\n  }\n}\n\n/**\n * Initialize Firebase Admin SDK\n * Only initializes once, even if imported multiple times\n */\nfunction initializeFirebaseAdmin() {\n  // Check if already initialized\n  if (admin.apps.length > 0) {\n    console.log('Firebase Admin already initialized, using existing instance');\n    return admin.apps[0];\n  }\n\n  try {\n    // Validate environment variables\n    validateEnvironmentVariables();\n\n    // Initialize Firebase Admin\n    const app = admin.initializeApp({\n      credential: admin.credential.cert({\n        projectId: process.env.FIREBASE_PROJECT_ID!,\n        clientEmail: process.env.FIREBASE_CLIENT_EMAIL!,\n        privateKey: formatPrivateKey(process.env.FIREBASE_PRIVATE_KEY),\n      }),\n    });\n\n    console.log('✅ Firebase Admin initialized successfully');\n    console.log('Project ID:', process.env.FIREBASE_PROJECT_ID);\n    \n    return app;\n  } catch (error: any) {\n    console.error('❌ Firebase Admin initialization failed:', error.message);\n    \n    // Provide helpful error messages\n    if (error.message.includes('FIREBASE_PRIVATE_KEY')) {\n      console.error('\\n💡 Tip: Make sure your private key is properly formatted in .env.local');\n      console.error('It should look like: FIREBASE_PRIVATE_KEY=\"-----BEGIN PRIVATE KEY-----\\\\nYour-Key\\\\n-----END PRIVATE KEY-----\\\\n\"');\n    }\n    \n    throw error;\n  }\n}\n\n// Initialize the app\nconst app = initializeFirebaseAdmin();\n\n// Export Firebase Admin services\nexport const adminAuth = getAuth(app);\nexport const adminDb = getFirestore(app);\n\n// Export the app instance (useful for testing or advanced usage)\nexport const adminApp = app;\n\n// Export default for convenience\nexport default admin;\n\n/**\n * Type-safe FieldValue export\n * Use this for timestamps and other Firestore field values\n */\nexport { FieldValue } from 'firebase-admin/firestore';\n\n/**\n * Utility function to check if Firebase Admin is properly initialized\n */\nexport function isFirebaseAdminInitialized(): boolean {\n  return admin.apps.length > 0;\n}\n\n/**\n * Utility function to get server timestamp\n */\nexport function getServerTimestamp() {\n  return admin.firestore.FieldValue.serverTimestamp();\n}"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;;;;;;AAED;AACA;AACA;;;;;;;;;AAEA;;;CAGC,GACD,SAAS,iBAAiB,GAAuB;IAC/C,IAAI,CAAC,KAAK;QACR,MAAM,IAAI,MAAM;IAClB;IAEA,+BAA+B;IAC/B,OAAO,IACJ,OAAO,CAAC,QAAQ,MAAO,0CAA0C;KACjE,OAAO,CAAC,MAAM,IAAS,oBAAoB;KAC3C,IAAI,IAAmB,0BAA0B;AACtD;AAEA;;CAEC,GACD,SAAS;IACP,MAAM,eAAe;QACnB,qBAAqB,QAAQ,GAAG,CAAC,mBAAmB;QACpD,uBAAuB,QAAQ,GAAG,CAAC,qBAAqB;QACxD,sBAAsB,QAAQ,GAAG,CAAC,oBAAoB;IACxD;IAEA,MAAM,cAAc,OAAO,OAAO,CAAC,cAChC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAK,CAAC,OACxB,GAAG,CAAC,CAAC,CAAC,IAAI,GAAK;IAElB,IAAI,YAAY,MAAM,GAAG,GAAG;QAC1B,MAAM,IAAI,MACR,CAAC,wCAAwC,EAAE,YAAY,IAAI,CAAC,MAAM,EAAE,CAAC,GACrE;IAEJ;AACF;AAEA;;;CAGC,GACD,SAAS;IACP,+BAA+B;IAC/B,IAAI,2HAAA,CAAA,UAAK,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;QACzB,QAAQ,GAAG,CAAC;QACZ,OAAO,2HAAA,CAAA,UAAK,CAAC,IAAI,CAAC,EAAE;IACtB;IAEA,IAAI;QACF,iCAAiC;QACjC;QAEA,4BAA4B;QAC5B,MAAM,MAAM,2HAAA,CAAA,UAAK,CAAC,aAAa,CAAC;YAC9B,YAAY,2HAAA,CAAA,UAAK,CAAC,UAAU,CAAC,IAAI,CAAC;gBAChC,WAAW,QAAQ,GAAG,CAAC,mBAAmB;gBAC1C,aAAa,QAAQ,GAAG,CAAC,qBAAqB;gBAC9C,YAAY,iBAAiB,QAAQ,GAAG,CAAC,oBAAoB;YAC/D;QACF;QAEA,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,eAAe,QAAQ,GAAG,CAAC,mBAAmB;QAE1D,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,2CAA2C,MAAM,OAAO;QAEtE,iCAAiC;QACjC,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,yBAAyB;YAClD,QAAQ,KAAK,CAAC;YACd,QAAQ,KAAK,CAAC;QAChB;QAEA,MAAM;IACR;AACF;AAEA,qBAAqB;AACrB,MAAM,MAAM;AAGL,MAAM,YAAY,CAAA,GAAA,kJAAA,CAAA,UAAO,AAAD,EAAE;AAC1B,MAAM,UAAU,CAAA,GAAA,4JAAA,CAAA,eAAY,AAAD,EAAE;AAG7B,MAAM,WAAW;uCAGT,2HAAA,CAAA,UAAK;;AAWb,SAAS;IACd,OAAO,2HAAA,CAAA,UAAK,CAAC,IAAI,CAAC,MAAM,GAAG;AAC7B;AAKO,SAAS;IACd,OAAO,2HAAA,CAAA,UAAK,CAAC,SAAS,CAAC,UAAU,CAAC,eAAe;AACnD","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mellow/Documents/Heal-Application-main/Heal-Application-main/src/app/api/hospital/staff/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { adminAuth, adminDb } from '@/lib/firebaseAdmin';\r\n\r\ninterface AddStaffRequest {\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  role: 'doctor' | 'nurse' | 'receptionist' | 'staff';\r\n  department: string;\r\n  hospitalId: string;\r\n}\r\n\r\n// Send staff setup email\r\nasync function sendStaffSetupEmail(\r\n  email: string,\r\n  name: string,\r\n  hospitalName: string,\r\n  role: string,\r\n  resetLink: string\r\n): Promise<void> {\r\n  const nodemailer = require('nodemailer');\r\n  \r\n  const transporter = nodemailer.createTransport({\r\n    host: 'smtp.gmail.com',\r\n    port: 587,\r\n    secure: false,\r\n    auth: {\r\n      user: process.env.EMAIL_USER,\r\n      pass: process.env.EMAIL_PASS,\r\n    },\r\n    tls: {\r\n      rejectUnauthorized: true,\r\n      minVersion: 'TLSv1.2',\r\n    },\r\n  });\r\n\r\n  const mailOptions = {\r\n    from: `\"${hospitalName}\" <${process.env.EMAIL_USER}>`,\r\n    to: email,\r\n    subject: `Welcome to ${hospitalName} - Set Up Your Account`,\r\n    html: `\r\n      <!DOCTYPE html>\r\n      <html>\r\n      <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n      </head>\r\n      <body style=\"margin: 0; padding: 0; font-family: Arial, sans-serif; background-color: #f4f4f4;\">\r\n        <table role=\"presentation\" style=\"width: 100%; border-collapse: collapse;\">\r\n          <tr>\r\n            <td align=\"center\" style=\"padding: 40px 0;\">\r\n              <table role=\"presentation\" style=\"width: 600px; border-collapse: collapse; background-color: #ffffff; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\">\r\n                <tr>\r\n                  <td style=\"padding: 40px 30px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); text-align: center;\">\r\n                    <h1 style=\"margin: 0; color: #ffffff; font-size: 28px; font-weight: bold;\">\r\n                      Welcome to ${hospitalName}!\r\n                    </h1>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"padding: 40px 30px;\">\r\n                    <h2 style=\"margin: 0 0 20px 0; color: #333333; font-size: 22px;\">\r\n                      Hello ${name},\r\n                    </h2>\r\n                    <p style=\"margin: 0 0 15px 0; color: #555555; font-size: 16px; line-height: 1.6;\">\r\n                      You have been added as a <strong style=\"color: #667eea; text-transform: capitalize;\">${role}</strong> at ${hospitalName}.\r\n                    </p>\r\n                    <p style=\"margin: 0 0 30px 0; color: #555555; font-size: 16px; line-height: 1.6;\">\r\n                      To get started, please click the button below to set your password and access your account:\r\n                    </p>\r\n                    <table role=\"presentation\" style=\"margin: 0 auto;\">\r\n                      <tr>\r\n                        <td style=\"border-radius: 8px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\">\r\n                          <a href=\"${resetLink}\" \r\n                             style=\"display: inline-block; padding: 16px 40px; color: #ffffff; text-decoration: none; font-size: 16px; font-weight: bold; border-radius: 8px;\">\r\n                            Set Up Your Account\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <p style=\"margin: 30px 0 15px 0; color: #888888; font-size: 14px; line-height: 1.6;\">\r\n                      If the button doesn't work, copy and paste this link into your browser:\r\n                    </p>\r\n                    <p style=\"margin: 0 0 30px 0; word-break: break-all;\">\r\n                      <a href=\"${resetLink}\" style=\"color: #667eea; text-decoration: none; font-size: 13px;\">\r\n                        ${resetLink}\r\n                      </a>\r\n                    </p>\r\n                    <div style=\"margin: 30px 0; padding: 20px; background-color: #f8f9fa; border-left: 4px solid #667eea; border-radius: 4px;\">\r\n                      <p style=\"margin: 0 0 10px 0; color: #333333; font-size: 14px; font-weight: bold;\">\r\n                        Important:\r\n                      </p>\r\n                      <ul style=\"margin: 0; padding-left: 20px; color: #555555; font-size: 14px; line-height: 1.6;\">\r\n                        <li style=\"margin-bottom: 8px;\">This link will expire in 24 hours</li>\r\n                        <li style=\"margin-bottom: 8px;\">Keep your password secure</li>\r\n                        <li>Contact your administrator if you need assistance</li>\r\n                      </ul>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"padding: 30px; background-color: #f8f9fa; text-align: center; border-top: 1px solid #e9ecef;\">\r\n                    <p style=\"margin: 0; color: #888888; font-size: 12px;\">\r\n                      © ${new Date().getFullYear()} ${hospitalName}. All rights reserved.\r\n                    </p>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </body>\r\n      </html>\r\n    `,\r\n    text: `\r\nWelcome to ${hospitalName}!\r\n\r\nHello ${name},\r\n\r\nYou have been added as a ${role} at ${hospitalName}.\r\n\r\nTo get started, please set your password by visiting this link:\r\n${resetLink}\r\n\r\nThis link will expire in 24 hours.\r\n\r\nIf you have any questions, please contact your administrator.\r\n\r\n© ${new Date().getFullYear()} ${hospitalName}. All rights reserved.\r\n    `,\r\n  };\r\n\r\n  await transporter.sendMail(mailOptions);\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('=== Add Staff API Called ===');\r\n\r\n    // Get authorization token\r\n    const authHeader = request.headers.get('Authorization');\r\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n      console.error('No authorization header');\r\n      return NextResponse.json(\r\n        { success: false, error: 'Unauthorized - No token provided' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const token = authHeader.split('Bearer ')[1];\r\n    \r\n    let decodedToken;\r\n    try {\r\n      decodedToken = await adminAuth.verifyIdToken(token);\r\n      console.log('Token verified for user:', decodedToken.uid);\r\n    } catch (error: any) {\r\n      console.error('Token verification failed:', error);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Invalid or expired token' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = decodedToken.uid;\r\n    const userRole = decodedToken.role;\r\n    const userHospitalId = decodedToken.hospitalId;\r\n\r\n    // Only hospital admins and super admins can add staff\r\n    if (userRole !== 'hospital_admin' && userRole !== 'super_admin') {\r\n      console.error('User role not authorized:', userRole);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Unauthorized - Only hospital administrators can add staff' },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    const body: AddStaffRequest = await request.json();\r\n    console.log('Request body:', { ...body, email: body.email?.substring(0, 10) + '...' });\r\n\r\n    const { name, email, phone, role, department, hospitalId } = body;\r\n\r\n    // Validate required fields\r\n    if (!name?.trim() || !email?.trim() || !phone?.trim() || !role || !department?.trim() || !hospitalId) {\r\n      console.error('Missing required fields');\r\n      return NextResponse.json(\r\n        { success: false, error: 'All fields are required' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validate email format\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email.trim())) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Invalid email address format' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validate role\r\n    const validRoles = ['doctor', 'nurse', 'receptionist', 'staff'];\r\n    if (!validRoles.includes(role)) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Invalid role' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Hospital admin can only add staff to their own hospital\r\n    if (userRole === 'hospital_admin' && userHospitalId !== hospitalId) {\r\n      console.error('Hospital admin trying to add staff to different hospital');\r\n      return NextResponse.json(\r\n        { success: false, error: 'Unauthorized - You can only add staff to your own hospital' },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    const trimmedEmail = email.trim().toLowerCase();\r\n    const trimmedName = name.trim();\r\n    const trimmedPhone = phone.trim();\r\n    const trimmedDepartment = department.trim();\r\n\r\n    // Check if email already exists\r\n    let existingUser = null;\r\n    try {\r\n      existingUser = await adminAuth.getUserByEmail(trimmedEmail);\r\n    } catch (error: any) {\r\n      if (error.code !== 'auth/user-not-found') {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    if (existingUser) {\r\n      console.error('Email already exists:', trimmedEmail);\r\n      return NextResponse.json(\r\n        { success: false, error: 'This email is already registered in the system' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Get hospital data\r\n    console.log('Fetching hospital:', hospitalId);\r\n    const hospitalDoc = await adminDb.collection('hospitals').doc(hospitalId).get();\r\n    \r\n    if (!hospitalDoc.exists) {\r\n      console.error('Hospital not found:', hospitalId);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Hospital not found' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    const hospitalData = hospitalDoc.data();\r\n    const hospitalName = hospitalData?.name || 'Hospital';\r\n    console.log('Hospital found:', hospitalName);\r\n\r\n    // Create user in Firebase Auth\r\n    console.log('Creating Firebase Auth user...');\r\n    const userRecord = await adminAuth.createUser({\r\n      email: trimmedEmail,\r\n      emailVerified: false,\r\n      disabled: false,\r\n    });\r\n    console.log('User created with UID:', userRecord.uid);\r\n\r\n    // Set custom claims\r\n    console.log('Setting custom claims...');\r\n    await adminAuth.setCustomUserClaims(userRecord.uid, {\r\n      role: role,\r\n      hospitalId: hospitalId,\r\n      hospitalRole: role,\r\n    });\r\n    console.log('Custom claims set');\r\n\r\n    // Create user document in Firestore\r\n    console.log('Creating Firestore user document...');\r\n    await adminDb.collection('users').doc(userRecord.uid).set({\r\n      email: trimmedEmail,\r\n      name: trimmedName,\r\n      phone: trimmedPhone,\r\n      role: role,\r\n      hospitalId: hospitalId,\r\n      hospitalRole: role,\r\n      department: trimmedDepartment,\r\n      status: 'pending',\r\n      passwordSet: false,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n      createdBy: userId,\r\n    });\r\n    console.log('User document created');\r\n\r\n    // Add staff reference to hospital's staff subcollection\r\n    console.log('Adding to hospital staff subcollection...');\r\n    await adminDb\r\n      .collection('hospitals')\r\n      .doc(hospitalId)\r\n      .collection('staff')\r\n      .doc(userRecord.uid)\r\n      .set({\r\n        userId: userRecord.uid,\r\n        name: trimmedName,\r\n        email: trimmedEmail,\r\n        phone: trimmedPhone,\r\n        role: role,\r\n        department: trimmedDepartment,\r\n        status: 'pending',\r\n        addedAt: new Date().toISOString(),\r\n        addedBy: userId,\r\n      });\r\n    console.log('Staff reference added');\r\n\r\n    // Generate password reset link\r\n    const baseUrl = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000';\r\n    const redirectUrl = new URL('/reset-password', baseUrl);\r\n\r\n    const actionCodeSettings = {\r\n      url: redirectUrl.toString(),\r\n      handleCodeInApp: true,\r\n    };\r\n\r\n    console.log('Generating password reset link...');\r\n    const passwordResetLink = await adminAuth.generatePasswordResetLink(\r\n      trimmedEmail,\r\n      actionCodeSettings\r\n    );\r\n    console.log('Password reset link generated');\r\n\r\n    // Send setup email\r\n    console.log('Sending setup email...');\r\n    try {\r\n      await sendStaffSetupEmail(\r\n        trimmedEmail,\r\n        trimmedName,\r\n        hospitalName,\r\n        role,\r\n        passwordResetLink\r\n      );\r\n      console.log('✅ Email sent successfully');\r\n    } catch (emailError: any) {\r\n      console.error('❌ Email sending failed:', emailError.message);\r\n      // Staff is created but email failed\r\n      return NextResponse.json({\r\n        success: true,\r\n        message: `Staff member ${trimmedName} added successfully, but setup email failed to send. Please send the credentials manually.`,\r\n        staffId: userRecord.uid,\r\n        warning: 'Email not sent',\r\n      });\r\n    }\r\n\r\n    console.log('✅ Staff member created successfully');\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: `Staff member ${trimmedName} added successfully! Setup email sent to ${trimmedEmail}.`,\r\n      staffId: userRecord.uid,\r\n    });\r\n  } catch (error: any) {\r\n    console.error('=== Error Adding Staff ===');\r\n    console.error('Error:', error);\r\n    console.error('Error code:', error.code);\r\n    console.error('Error message:', error.message);\r\n\r\n    let errorMessage = 'Failed to add staff member. Please try again.';\r\n\r\n    if (error.code === 'auth/email-already-in-use') {\r\n      errorMessage = 'This email is already in use';\r\n    } else if (error.code === 'auth/invalid-email') {\r\n      errorMessage = 'Invalid email address';\r\n    } else if (error.message) {\r\n      errorMessage = error.message;\r\n    }\r\n\r\n    return NextResponse.json(\r\n      { success: false, error: errorMessage },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function GET() {\r\n  return NextResponse.json({ \r\n    success: false,\r\n    error: 'Method not allowed. Use POST to add staff.' \r\n  }, { status: 405 });\r\n}\r\n\r\nexport async function PUT() {\r\n  return NextResponse.json({ \r\n    success: false,\r\n    error: 'Method not allowed. Use POST to add staff.' \r\n  }, { status: 405 });\r\n}\r\n\r\nexport async function DELETE() {\r\n  return NextResponse.json({ \r\n    success: false,\r\n    error: 'Method not allowed.' \r\n  }, { status: 405 });\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}